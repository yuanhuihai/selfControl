<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>